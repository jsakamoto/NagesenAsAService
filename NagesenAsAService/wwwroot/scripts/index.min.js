"use strict";var NaaS;(function(n){class t{constructor(){}postAsync(n,t,i){return this.sendRequestAsync("post",n,t,i)}deleteAsync(n,t,i){return this.sendRequestAsync("delete",n,t,i)}sendRequestAsync(n,t,i,r){const u={method:n};typeof r!="undefined"&&(u.headers=r);u.headers=u.headers||{};typeof u.headers.Accept=="undefined"&&(u.headers.Accept="application/json");typeof u.headers["Content-Type"]=="undefined"&&(u.headers["Content-Type"]="application/json");typeof i=="string"&&(u.body=i);typeof i=="object"&&(u.body=JSON.stringify(i));const f=this.getCookie("X-ANTIFORGERY-TOKEN");return f!==""&&(u.headers["X-ANTIFORGERY-TOKEN"]=f),fetch(t,u)}getCookie(n){const t=document.cookie.split(";").map(n=>n.trim().split("=")).filter(t=>decodeURIComponent(t[0])===n).pop();return typeof t=="undefined"?"":decodeURIComponent(t[1])}}n.HttpClientService=t;n.httpClientService=new t})(NaaS||(NaaS={})),function(n){class t{constructor(n){this.httpClient=n;this.roomNumber="";this.roomNumberAvailable=!1;const t=document.getElementById("room-number-input");t.addEventListener("input",()=>this.onInputRoomNumberInput(t.value));this.enterButton=document.getElementById("enter-button");const i=document.getElementById("create-newroom-button");i.addEventListener("click",()=>this.onClickCreateNewRoomButton());this.enterButton.addEventListener("click",()=>this.onClickEnterRoomButton())}onInputRoomNumberInput(n){this.roomNumber=n;this.update()}update(){this.roomNumberAvailable=/^\d{4}$/.test(this.roomNumber);this.enterButton.classList.toggle("disabled",!this.roomNumberAvailable)}async onClickCreateNewRoomButton(){const n=await this.httpClient.postAsync("/api/rooms/new");if(n.status===200){const t=await n.json();await this.httpClient.deleteAsync("/api/rooms/expired");location.href=`/room/${t}/box`}else{const i=await n.text(),t=`Creating new room was failed. (HTTP Status ${n.status} ${i})`;console.error(t);alert(t)}}async onClickEnterRoomButton(){if(this.update(),this.roomNumberAvailable!==!1){const n=await this.httpClient.postAsync(`/api/rooms/${this.roomNumber}/enter`);if(n.status===404)location.href=`/room/${this.roomNumber}`;else if(n.status===200){const t=await n.json();location.href=t.isOwnedByCurrentUser?`/room/${this.roomNumber}/box`:`/room/${this.roomNumber}`}else{const i=await n.text(),t=`Entering room was failed. (HTTP Status ${n.status} ${i})`;console.error(t);alert(t)}}}}n.controller=new t(n.httpClientService)}(NaaS||(NaaS={}));