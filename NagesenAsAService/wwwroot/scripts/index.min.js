"use strict";var NaaS;(function(n){class t{constructor(){this.roomNumber="";this.roomNumberAvailable=!1;const n=document.getElementById("room-number-input");n.addEventListener("input",()=>this.onInputRoomNumberInput(n.value));this.enterButton=document.getElementById("enter-button");const t=document.getElementById("create-newroom-button");t.addEventListener("click",()=>this.onClickCreateNewRoomButton());this.enterButton.addEventListener("click",()=>this.onClickEnterRoomButton())}onInputRoomNumberInput(n){this.roomNumber=n;this.update()}update(){this.roomNumberAvailable=/^\d{4}$/.test(this.roomNumber);this.enterButton.classList.toggle("disabled",!this.roomNumberAvailable)}async onClickCreateNewRoomButton(){const n=await fetch("/api/rooms/new",{method:"post"});if(n.status===200){const t=await n.json();await fetch("/api/rooms/expired",{method:"delete"});location.href=`/room/${t}/box`}else{const i=await n.text(),t=`Creating new room was failed. (HTTP Status ${n.status} ${i})`;console.error(t);alert(t)}}async onClickEnterRoomButton(){if(this.update(),this.roomNumberAvailable!==!1){const n=await fetch(`/api/rooms/${this.roomNumber}/enter`,{method:"post"});if(n.status===404)location.href=`/room/${this.roomNumber}`;else if(n.status===200){const t=await n.json();location.href=t.isOwnedByCurrentUser?`/room/${this.roomNumber}/box`:`/room/${this.roomNumber}`}else{const i=await n.text(),t=`Entering room was failed. (HTTP Status ${n.status} ${i})`;console.error(t);alert(t)}}}}n.controller=new t})(NaaS||(NaaS={}));